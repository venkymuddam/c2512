#include<iostream>
#include<unistd.h>
#include<cstring>

void child(int writeEnd){
    close(writeEnd-1);
    const char* msg = "Hello from child ";
    write(writeEnd, msg, strlen(msg)+1);
    close(writeEnd);
}
void parent(int readEnd){
    close(readEnd+1);
    char buffer[1024];
    read(readEnd, buffer, sizeof(buffer));
    std::cout << "parent received : "<< buffer << std::endl;
    close(readEnd);
}
int main(){
    int pipefd[2];
    pid_t pid;
    
    if (pipe(pipefd) == -1){
        perror("pipe");
        return 1;
    }
    pid = fork();
    if (pid == -1){
        
        perror("fork");
        return 1;
    }
    if (pid == 0){
        child(pipefd[1]);
    }
    else {
        parent(pipefd[0]);
    }
    
    return 0;
}
